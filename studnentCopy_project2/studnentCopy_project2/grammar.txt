program             ::= statement*
statement           ::= assign_stmt | if_stmt | while_stmt | expr_stmt | function_call | decl_stmt
decl_stmt           ::= type IDENTIFIER '=' expression
type                ::= 'int' | 'float'
assign_stmt         ::= IDENTIFIER '=' expression
if_stmt             ::= 'if' boolean_expression '{' block '}' ('else' '{' block '}')?
while_stmt          ::= 'while' boolean_expression '{' block '}'
block               ::= statement*
expr_stmt           ::= expression
function_call       ::= IDENTIFIER '(' arg_list? ')'
arg_list            ::= expression (',' expression)*
boolean_expression  ::= term (( '==' | '!=' | '>' | '<' ) term)*
expression          ::= term (( '+' | '-' ) term)*
term                ::= factor (( '*' | '/' ) factor)*
factor              ::= NUMBER | FNUMBER |IDENTIFIER | '(' expression ')'
IDENTIFIER          ::= [a-zA-Z_][a-zA-Z0-9_]*
NUMBER              ::= [0-9]+
FNUMBER             ::= [0-9]+\.[0-9]+
